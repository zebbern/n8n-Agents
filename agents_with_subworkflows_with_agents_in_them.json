{
  "name": "agents with subworkflows with agents in them",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -400,
        100
      ],
      "id": "fcc63b72-ec9d-4f37-9721-55015e60fc7e",
      "name": "When chat message received",
      "webhookId": "532c6b1c-77c5-4a8e-b011-8df0c9c9b1ee"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "==Questions: \"{{ $json.chatInput }}\"\n\nDecide the intent and required sub-agents. Assign them tasks explicitly. Wait for their output before replying. Never answer directly unless no tool is needed.\n\nYou must:\n- Always use tools when asked or when actions are needed.\n- Wait for the real tool result before replying.\n- Speak to me like I‚Äôm your best friend.\n",
        "options": {
          "systemMessage": "You are the Main AI Agent responsible for coordinating other specialized sub-agents to complete complex user requests.\n\nYou have access to the following sub-agents/tools:\n\nüìö ResearchAgent  \nHandles any tasks related to gathering information, calling APIs, or fetching data.\n\n‚öôÔ∏è Agent Confirm  \nExecutes real-world operations, triggers backups, deployments, or any confirmation-required actions.\n\nüìÑ DocumentAgent  \nManages all document-related tasks, including summarization, editing, analysis, or transformation.\n\n---\n\nüîß Your Role:\n- Never perform tasks directly.\n- Always delegate to sub-agents using tools when applicable.\n- Explicitly assign the task to the right agent, with a clear goal and context.\n- Wait for the tool‚Äôs result before replying to the user.\n- Never guess or assume what a tool would say‚Äîonly reply after you get real output.\n- Be friendly, clear, and helpful when responding.\n\n---\n\nüß© Sub-Agent Notes:\n- Tools return real output and must be awaited.\n- DocumentAgent should always ask for the document if it hasn‚Äôt been provided.\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        -160,
        100
      ],
      "id": "b2ed9b60-998b-4ceb-8adf-924fcb58f821",
      "name": "AI Agent"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "typeVersion": 1,
      "position": [
        60,
        400
      ],
      "id": "61db5904-18ad-4d91-a087-d8e73def4493",
      "name": "Think"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -260,
        260
      ],
      "id": "314c5829-be4f-4322-9c75-63d50d4bd132",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "R3QTsoQsauJq77Wa",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "name": "researchagent",
        "description": "call this and ask it to use tools to get desired results",
        "workflowId": {
          "__rl": true,
          "value": "3XixdzkTa5V5TN0x",
          "mode": "list",
          "cachedResultName": "agent research"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.1,
      "position": [
        300,
        280
      ],
      "id": "3001b6c9-b76a-4c11-843d-fadf156f10e2",
      "name": "research agent"
    },
    {
      "parameters": {
        "name": "agentconfirm",
        "description": "call this ai agent and it has a tool to perform an github backup via a tool inside this agent. make sure to ask it to use it unless otherwise stated.",
        "workflowId": {
          "__rl": true,
          "value": "tIFFpKjuDpqY7vVm",
          "mode": "list",
          "cachedResultName": "agent confirm"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.1,
      "position": [
        180,
        380
      ],
      "id": "6511fc32-c160-49c9-9fd1-9092b82cf205",
      "name": "agentconfirm"
    },
    {
      "parameters": {
        "name": "DocumentAgent",
        "description": "call this tool when u want to check a file in google drive, and extract invoice data from it.",
        "workflowId": {
          "__rl": true,
          "value": "ZrfMv6Cfu3vJtT4u",
          "mode": "list",
          "cachedResultName": "ai agent document info"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.1,
      "position": [
        300,
        140
      ],
      "id": "ba830ce6-fff8-41a9-98fd-1616062e0af2",
      "name": "DocumentAgent"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        -120,
        320
      ],
      "id": "7661ef1e-7a31-435d-8dee-b9735edcd4e1",
      "name": "Postgres Chat Memory"
    },
    {
      "parameters": {
        "content": "This is my main agent, which has access to subworkflows with ai agents in them. it acts like the brain and decides what sub-agent should handle the request."
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -160,
        -80
      ],
      "id": "a411347a-0522-4c29-bc5c-2e94a806cce6",
      "name": "Sticky Note"
    }
  ],
  "pinData": {},
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Think": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "research agent": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "agentconfirm": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "DocumentAgent": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "228a3896-cc20-49ff-be4b-b4183d048cf3",
  "meta": {
    "instanceId": "eb1f7a63d7261ae48134020df9f51c99ce236492df30462ba39ff7bd720662f3"
  },
  "id": "XRZR2QY5QMEL6lay",
  "tags": []
}